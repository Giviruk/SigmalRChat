// <auto-generated />

using System;
using ChatSignalR.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace ChatSignalR.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("ChatSignalR.Models.Role", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("integer")
                    .HasAnnotation("Npgsql:ValueGenerationStrategy",
                        NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                b.Property<string>("Name")
                    .HasColumnType("text");

                b.HasKey("Id");

                b.ToTable("Roles");

                b.HasData(
                    new
                    {
                        Id = 1,
                        Name = "admin"
                    },
                    new
                    {
                        Id = 2,
                        Name = "user"
                    },
                    new
                    {
                        Id = 3,
                        Name = "banned"
                    });
            });
            
            modelBuilder.Entity("ChatSignalR.Models.Room", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("integer")
                    .HasAnnotation("Npgsql:ValueGenerationStrategy",
                        NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                b.Property<string>("Name")
                    .HasColumnType("text");

                b.HasKey("Id");

                b.ToTable("Rooms");

                b.HasData(
                    new
                    {
                        Id = 1,
                        Name = "Тестовая1"
                    },
                    new
                    {
                        Id = 2,
                        Name = "Тестовая2"
                    },
                    new
                    {
                        Id = 3,
                        Name = "Тестовая3"
                    });
            });

            modelBuilder.Entity("ChatSignalR.Models.User", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("integer")
                    .HasAnnotation("Npgsql:ValueGenerationStrategy",
                        NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                b.Property<string>("Email")
                    .HasColumnType("text");

                b.Property<string>("Password")
                    .HasColumnType("text");

                b.Property<int?>("RoleId")
                    .HasColumnType("integer");
                b.Property<string>("Nickname")
                    .HasColumnType("text");

                b.HasKey("Id");

                b.HasIndex("RoleId");

                b.ToTable("Users");

                b.HasData(
                    new
                    {
                        Id = 1,
                        Email = "admin@mail.com",
                        Nickname="admin",
                        Password = "123456",
                        RoleId = 1
                    },
                    new
                    {
                        Id = 2,
                        Email = "tom@mail.com",
                        Nickname="tom",
                        Password = "123456",
                        RoleId = 1
                    },
                    new
                    {
                        Id = 3,
                        Email = "bob@mail.com",
                        Nickname="bob",
                        Password = "123456",
                        RoleId = 2
                    },
                    new
                    {
                        Email = "sam@mail.com",
                        Nickname="sam",
                        Password = "123456",
                        RoleId = 2
                    });
            });

            modelBuilder.Entity("ChatSignalR.Models.User", b =>
            {
                b.HasOne("ChatSignalR.Models.Role", "Role")
                    .WithMany("Users")
                    .HasForeignKey("RoleId");
            });
#pragma warning restore 612, 618
        }
    }
}